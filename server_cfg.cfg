[DEFAULT]


From nova.conf


DEPRECATED:
When returning instance metadata, this is the class that is used
for getting vendor metadata when that class isn't specified in the individual
request. The value should be the full dot-separated path to the class to use.

Possible values:

PORT=4404 

* Any valid dot-separated class path that can be imported.
 (string value)
This option is deprecated for removal since 13.0.0.
Its value may be silently ignored in the future.
vendordata_driver = nova.api.metadata.vendordata_json.JsonFileVendorData

DEPRECATED:
This option is used to enable or disable quota checking for tenant networks.

Related options:

* quota_networks
 (boolean value)
This option is deprecated for removal since 14.0.0.
Its value may be silently ignored in the future.
Reason:
CRUD operations on tenant networks are only available when using nova-network
and nova-network is itself deprecated.
enable_network_quota = false

DEPRECATED:
This option controls the number of private networks that can be created per
project (or per tenant).

Related options:

* enable_network_quota
 (integer value)
Minimum value: 0
This option is deprecated for removal since 14.0.0.
Its value may be silently ignored in the future.
Reason:
CRUD operations on tenant networks are only available when using nova-network
and nova-network is itself deprecated.
quota_networks = 3


Availability zone for internal services.

This option determines the availability zone for the various internal nova
services, such as 'nova-scheduler', 'nova-conductor', etc.

Possible values:

* Any string representing an existing availability zone name.
 (string value)
internal_service_availability_zone = internal


Default availability zone for compute services.

This option determines the default availability zone for 'nova-compute'
services, which will be used if the service(s) do not belong to aggregates
with
availability zone metadata.

Possible values:

* Any string representing an existing availability zone name.
 (string value)
default_availability_zone = nova


Default availability zone for instances.

This option determines the default availability zone for instances, which will
be used when a user does not specify one when creating an instance. The
instance(s) will be bound to this availability zone for their lifetime.

Possible values:

* Any string representing an existing availability zone name.
* None, which means that the instance can move from one availability zone to
  another during its lifetime if it is moved from one compute node to another.
 (string value)
default_schedule_zone = <None>

Length of generated instance admin passwords. (integer value)
Minimum value: 0
password_length = 12


Time period to generate instance usages for. It is possible to define optional
offset to given period by appending @ character followed by a number defining
offset.

Possible values:

*  period, example: ``hour``, ``day``, ``month` or ``year``
*  period with offset, example: ``month@15`` will result in monthly audits
   starting on 15th day of month.
 (string value)
instance_usage_audit_period = month


Start and use a daemon that can run the commands that need to be run with
root privileges. This option is usually enabled on nodes that run nova compute
processes.
 (boolean value)
use_rootwrap_daemon = false


Path to the rootwrap configuration file.

Goal of the root wrapper is to allow a service-specific unprivileged user to
run a number of actions as the root user in the safest manner possible.
The configuration file used here must match the one defined in the sudoers
entry.
 (string value)
rootwrap_config = /etc/nova/rootwrap.conf

Explicitly specify the temporary working directory. (string value)
tempdir = <None>


Determine if monkey patching should be applied.

Related options:

* ``monkey_patch_modules``: This must have values set for this option to
  have any effect
 (boolean value)
monkey_patch = false


List of modules/decorators to monkey patch.

This option allows you to patch a decorator for all functions in specified
modules.

Possible values:

* nova.compute.api:nova.notifications.notify_decorator
* nova.api.ec2.cloud:nova.notifications.notify_decorator
* [...]

Related options: